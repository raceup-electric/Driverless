class Model(Module):
  __parameters__ = []
  __buffers__ = []
  training : bool
  _is_full_backward_hook : Optional[bool]
  model : __torch__.torch.nn.modules.container.Sequential
  def forward(self: __torch__.models.yolo.Model,
    x: Tensor) -> Tuple[Tensor, List[Tensor]]:
    model = self.model
    _105 = getattr(model, "105")
    model0 = self.model
    _104 = getattr(model0, "104")
    model1 = self.model
    _103 = getattr(model1, "103")
    model2 = self.model
    _102 = getattr(model2, "102")
    model3 = self.model
    _101 = getattr(model3, "101")
    model4 = self.model
    _100 = getattr(model4, "100")
    model5 = self.model
    _99 = getattr(model5, "99")
    model6 = self.model
    _98 = getattr(model6, "98")
    model7 = self.model
    _97 = getattr(model7, "97")
    model8 = self.model
    _96 = getattr(model8, "96")
    model9 = self.model
    _95 = getattr(model9, "95")
    model10 = self.model
    _94 = getattr(model10, "94")
    model11 = self.model
    _93 = getattr(model11, "93")
    model12 = self.model
    _92 = getattr(model12, "92")
    model13 = self.model
    _91 = getattr(model13, "91")
    model14 = self.model
    _90 = getattr(model14, "90")
    model15 = self.model
    _89 = getattr(model15, "89")
    model16 = self.model
    _88 = getattr(model16, "88")
    model17 = self.model
    _87 = getattr(model17, "87")
    model18 = self.model
    _86 = getattr(model18, "86")
    model19 = self.model
    _85 = getattr(model19, "85")
    model20 = self.model
    _84 = getattr(model20, "84")
    model21 = self.model
    _83 = getattr(model21, "83")
    model22 = self.model
    _82 = getattr(model22, "82")
    model23 = self.model
    _81 = getattr(model23, "81")
    model24 = self.model
    _80 = getattr(model24, "80")
    model25 = self.model
    _79 = getattr(model25, "79")
    model26 = self.model
    _78 = getattr(model26, "78")
    model27 = self.model
    _77 = getattr(model27, "77")
    model28 = self.model
    _76 = getattr(model28, "76")
    model29 = self.model
    _75 = getattr(model29, "75")
    model30 = self.model
    _74 = getattr(model30, "74")
    model31 = self.model
    _73 = getattr(model31, "73")
    model32 = self.model
    _72 = getattr(model32, "72")
    model33 = self.model
    _71 = getattr(model33, "71")
    model34 = self.model
    _70 = getattr(model34, "70")
    model35 = self.model
    _69 = getattr(model35, "69")
    model36 = self.model
    _68 = getattr(model36, "68")
    model37 = self.model
    _67 = getattr(model37, "67")
    model38 = self.model
    _66 = getattr(model38, "66")
    model39 = self.model
    _65 = getattr(model39, "65")
    model40 = self.model
    _64 = getattr(model40, "64")
    model41 = self.model
    _63 = getattr(model41, "63")
    model42 = self.model
    _62 = getattr(model42, "62")
    model43 = self.model
    _61 = getattr(model43, "61")
    model44 = self.model
    _60 = getattr(model44, "60")
    model45 = self.model
    _59 = getattr(model45, "59")
    model46 = self.model
    _58 = getattr(model46, "58")
    model47 = self.model
    _57 = getattr(model47, "57")
    model48 = self.model
    _56 = getattr(model48, "56")
    model49 = self.model
    _55 = getattr(model49, "55")
    model50 = self.model
    _54 = getattr(model50, "54")
    model51 = self.model
    _53 = getattr(model51, "53")
    model52 = self.model
    _52 = getattr(model52, "52")
    model53 = self.model
    _51 = getattr(model53, "51")
    model54 = self.model
    _50 = getattr(model54, "50")
    model55 = self.model
    _49 = getattr(model55, "49")
    model56 = self.model
    _48 = getattr(model56, "48")
    model57 = self.model
    _47 = getattr(model57, "47")
    model58 = self.model
    _46 = getattr(model58, "46")
    model59 = self.model
    _45 = getattr(model59, "45")
    model60 = self.model
    _44 = getattr(model60, "44")
    model61 = self.model
    _43 = getattr(model61, "43")
    model62 = self.model
    _42 = getattr(model62, "42")
    model63 = self.model
    _41 = getattr(model63, "41")
    model64 = self.model
    _40 = getattr(model64, "40")
    model65 = self.model
    _39 = getattr(model65, "39")
    model66 = self.model
    _38 = getattr(model66, "38")
    model67 = self.model
    _37 = getattr(model67, "37")
    model68 = self.model
    _36 = getattr(model68, "36")
    model69 = self.model
    _35 = getattr(model69, "35")
    model70 = self.model
    _34 = getattr(model70, "34")
    model71 = self.model
    _33 = getattr(model71, "33")
    model72 = self.model
    _32 = getattr(model72, "32")
    model73 = self.model
    _31 = getattr(model73, "31")
    model74 = self.model
    _30 = getattr(model74, "30")
    model75 = self.model
    _29 = getattr(model75, "29")
    model76 = self.model
    _28 = getattr(model76, "28")
    model77 = self.model
    _27 = getattr(model77, "27")
    model78 = self.model
    _26 = getattr(model78, "26")
    model79 = self.model
    _25 = getattr(model79, "25")
    model80 = self.model
    _24 = getattr(model80, "24")
    model81 = self.model
    _23 = getattr(model81, "23")
    model82 = self.model
    _22 = getattr(model82, "22")
    model83 = self.model
    _21 = getattr(model83, "21")
    model84 = self.model
    _20 = getattr(model84, "20")
    model85 = self.model
    _19 = getattr(model85, "19")
    model86 = self.model
    _18 = getattr(model86, "18")
    model87 = self.model
    _17 = getattr(model87, "17")
    model88 = self.model
    _16 = getattr(model88, "16")
    model89 = self.model
    _15 = getattr(model89, "15")
    model90 = self.model
    _14 = getattr(model90, "14")
    model91 = self.model
    _13 = getattr(model91, "13")
    model92 = self.model
    _12 = getattr(model92, "12")
    model93 = self.model
    _11 = getattr(model93, "11")
    model94 = self.model
    _10 = getattr(model94, "10")
    model95 = self.model
    _9 = getattr(model95, "9")
    model96 = self.model
    _8 = getattr(model96, "8")
    model97 = self.model
    _7 = getattr(model97, "7")
    model98 = self.model
    _6 = getattr(model98, "6")
    model99 = self.model
    _5 = getattr(model99, "5")
    model100 = self.model
    _4 = getattr(model100, "4")
    model101 = self.model
    _3 = getattr(model101, "3")
    model102 = self.model
    _2 = getattr(model102, "2")
    model103 = self.model
    _1 = getattr(model103, "1")
    model104 = self.model
    _0 = getattr(model104, "0")
    _106 = (_2).forward((_1).forward((_0).forward(x, ), ), )
    _107 = (_3).forward(_106, )
    _108 = (_4).forward(_107, )
    _109 = (_5).forward(_107, )
    _110 = (_7).forward((_6).forward(_109, ), )
    _111 = (_9).forward((_8).forward(_110, ), )
    _112 = (_10).forward(_111, _110, _109, _108, )
    _113 = (_11).forward(_112, )
    _114 = (_13).forward((_12).forward(_113, ), )
    _115 = (_15).forward((_14).forward(_113, ), )
    _116 = (_16).forward(_115, _114, )
    _117 = (_17).forward(_116, )
    _118 = (_18).forward(_116, )
    _119 = (_20).forward((_19).forward(_118, ), )
    _120 = (_22).forward((_21).forward(_119, ), )
    _121 = (_23).forward(_120, _119, _118, _117, )
    _122 = (_24).forward(_121, )
    _123 = (_26).forward((_25).forward(_122, ), )
    _124 = (_28).forward((_27).forward(_122, ), )
    _125 = (_29).forward(_124, _123, )
    _126 = (_30).forward(_125, )
    _127 = (_31).forward(_125, )
    _128 = (_33).forward((_32).forward(_127, ), )
    _129 = (_35).forward((_34).forward(_128, ), )
    _130 = (_36).forward(_129, _128, _127, _126, )
    _131 = (_37).forward(_130, )
    _132 = (_39).forward((_38).forward(_131, ), )
    _133 = (_41).forward((_40).forward(_131, ), )
    _134 = (_42).forward(_133, _132, )
    _135 = (_43).forward(_134, )
    _136 = (_44).forward(_134, )
    _137 = (_46).forward((_45).forward(_136, ), )
    _138 = (_48).forward((_47).forward(_137, ), )
    _139 = (_49).forward(_138, _137, _136, _135, )
    _140 = (_51).forward((_50).forward(_139, ), )
    _141 = (_53).forward((_52).forward(_140, ), )
    _142 = (_55).forward((_54).forward(_131, ), _141, )
    _143 = (_56).forward(_142, )
    _144 = (_57).forward(_142, )
    _145 = (_58).forward(_144, )
    _146 = (_59).forward(_145, )
    _147 = (_60).forward(_146, )
    _148 = (_62).forward((_61).forward(_147, ), _147, _146, _145, _144, _143, )
    _149 = (_63).forward(_148, )
    _150 = (_65).forward((_64).forward(_149, ), )
    _151 = (_67).forward((_66).forward(_122, ), _150, )
    _152 = (_68).forward(_151, )
    _153 = (_69).forward(_151, )
    _154 = (_70).forward(_153, )
    _155 = (_71).forward(_154, )
    _156 = (_72).forward(_155, )
    _157 = (_74).forward((_73).forward(_156, ), _156, _155, _154, _153, _152, )
    _158 = (_75).forward(_157, )
    _159 = (_77).forward((_76).forward(_158, ), )
    _160 = (_79).forward((_78).forward(_158, ), )
    _161 = (_80).forward(_160, _159, _149, )
    _162 = (_81).forward(_161, )
    _163 = (_82).forward(_161, )
    _164 = (_83).forward(_163, )
    _165 = (_84).forward(_164, )
    _166 = (_85).forward(_165, )
    _167 = (_87).forward((_86).forward(_166, ), _166, _165, _164, _163, _162, )
    _168 = (_88).forward(_167, )
    _169 = (_90).forward((_89).forward(_168, ), )
    _170 = (_92).forward((_91).forward(_168, ), )
    _171 = (_93).forward(_170, _169, _140, )
    _172 = (_94).forward(_171, )
    _173 = (_95).forward(_171, )
    _174 = (_96).forward(_173, )
    _175 = (_97).forward(_174, )
    _176 = (_98).forward(_175, )
    _177 = (_100).forward((_99).forward(_176, ), _176, _175, _174, _173, _172, )
    _178 = (_101).forward(_177, )
    _179 = (_105).forward((_102).forward(_158, ), (_103).forward(_168, ), (_104).forward(_178, ), )
    _180, _181, _182, _183, = _179
    return (_183, [_180, _181, _182])
class IDetect(Module):
  __parameters__ = []
  __buffers__ = ["anchors", "anchor_grid", ]
  anchors : Tensor
  anchor_grid : Tensor
  training : bool
  _is_full_backward_hook : Optional[bool]
  m : __torch__.torch.nn.modules.container.___torch_mangle_291.ModuleList
  ia : __torch__.torch.nn.modules.container.___torch_mangle_294.ModuleList
  im : __torch__.torch.nn.modules.container.___torch_mangle_297.ModuleList
  def forward(self: __torch__.models.yolo.IDetect,
    argument_1: Tensor,
    argument_2: Tensor,
    argument_3: Tensor) -> Tuple[Tensor, Tensor, Tensor, Tensor]:
    m = self.m
    _2 = getattr(m, "2")
    m0 = self.m
    _1 = getattr(m0, "1")
    anchor_grid = self.anchor_grid
    m1 = self.m
    _0 = getattr(m1, "0")
    _78 = (_0).forward(argument_1, )
    bs = ops.prim.NumToTensor(torch.size(_78, 0))
    _79 = int(bs)
    _80 = int(bs)
    ny = ops.prim.NumToTensor(torch.size(_78, 2))
    _81 = int(ny)
    nx = ops.prim.NumToTensor(torch.size(_78, 3))
    _82 = torch.view(_78, [_80, 3, 10, _81, int(nx)])
    _83 = torch.contiguous(torch.permute(_82, [0, 1, 3, 4, 2]))
    y = torch.sigmoid(_83)
    _84 = torch.mul(torch.slice(y, 4, 0, 2), CONSTANTS.c0)
    _85 = torch.add(torch.sub(_84, CONSTANTS.c1), CONSTANTS.c2)
    _86 = torch.mul(_85, torch.select(CONSTANTS.c3, 0, 0))
    _87 = torch.copy_(torch.slice(y, 4, 0, 2), _86)
    _88 = torch.mul(torch.slice(y, 4, 2, 4), CONSTANTS.c4)
    _89 = torch.mul(torch.pow(_88, 2), torch.select(anchor_grid, 0, 0))
    _90 = torch.copy_(torch.slice(y, 4, 2, 4), _89)
    _91 = torch.view(y, [_79, -1, 10])
    _92 = (_1).forward(argument_2, )
    bs0 = ops.prim.NumToTensor(torch.size(_92, 0))
    _93 = int(bs0)
    _94 = int(bs0)
    ny0 = ops.prim.NumToTensor(torch.size(_92, 2))
    _95 = int(ny0)
    nx0 = ops.prim.NumToTensor(torch.size(_92, 3))
    _96 = torch.view(_92, [_94, 3, 10, _95, int(nx0)])
    _97 = torch.contiguous(torch.permute(_96, [0, 1, 3, 4, 2]))
    y0 = torch.sigmoid(_97)
    _98 = torch.mul(torch.slice(y0, 4, 0, 2), CONSTANTS.c0)
    _99 = torch.add(torch.sub(_98, CONSTANTS.c1), CONSTANTS.c5)
    _100 = torch.mul(_99, torch.select(CONSTANTS.c3, 0, 1))
    _101 = torch.copy_(torch.slice(y0, 4, 0, 2), _100)
    _102 = torch.mul(torch.slice(y0, 4, 2, 4), CONSTANTS.c4)
    _103 = torch.mul(torch.pow(_102, 2), torch.select(anchor_grid, 0, 1))
    _104 = torch.copy_(torch.slice(y0, 4, 2, 4), _103)
    _105 = torch.view(y0, [_93, -1, 10])
    _106 = (_2).forward(argument_3, )
    bs1 = ops.prim.NumToTensor(torch.size(_106, 0))
    _107 = int(bs1)
    _108 = int(bs1)
    ny1 = ops.prim.NumToTensor(torch.size(_106, 2))
    _109 = int(ny1)
    nx1 = ops.prim.NumToTensor(torch.size(_106, 3))
    _110 = torch.view(_106, [_108, 3, 10, _109, int(nx1)])
    _111 = torch.permute(_110, [0, 1, 3, 4, 2])
    _112 = torch.contiguous(_111)
    y1 = torch.sigmoid(_112)
    _113 = torch.mul(torch.slice(y1, 4, 0, 2), CONSTANTS.c0)
    _114 = torch.add(torch.sub(_113, CONSTANTS.c1), CONSTANTS.c6)
    _115 = torch.mul(_114, torch.select(CONSTANTS.c3, 0, 2))
    _116 = torch.copy_(torch.slice(y1, 4, 0, 2), _115)
    _117 = torch.mul(torch.slice(y1, 4, 2, 4), CONSTANTS.c4)
    _118 = torch.mul(torch.pow(_117, 2), torch.select(anchor_grid, 0, 2))
    _119 = torch.copy_(torch.slice(y1, 4, 2, 4), _118)
    _120 = [_91, _105, torch.view(y1, [_107, -1, 10])]
    _121 = (_83, _97, _112, torch.cat(_120, 1))
    return _121
